// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"erpfinance/internal/handler/auth"
	"erpfinance/internal/handler/users"
	auth2 "erpfinance/internal/repository/auth"
	"erpfinance/internal/repository/token"
	users2 "erpfinance/internal/repository/users"
	auth3 "erpfinance/internal/service/auth"
	users3 "erpfinance/internal/service/users"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from injector.go:

// InitializeAuthHandler menginisialisasi auth handler dengan semua dependensinya
func InitializeAuthHandler(db *gorm.DB) (auth.AuthHandler, error) {
	authRepository := auth2.NewAuthRepository()
	tokenRepository := token.NewTokenRepository()
	validate := ProvideValidator()
	authService := auth3.NewAuthService(authRepository, tokenRepository, db, validate)
	authHandler := auth.NewAuthHandler(authService)
	return authHandler, nil
}

// InitializeUsersHandler menginisialisasi users handler dengan semua dependensinya
func InitializeUsersHandler(db *gorm.DB) (users.UsersHandler, error) {
	usersRepository := users2.NewUsersRepository()
	validate := ProvideValidator()
	usersService := users3.NewUsersService(usersRepository, db, validate)
	usersHandler := users.NewUsersHandler(usersService)
	return usersHandler, nil
}

// injector.go:

// ProviderSet adalah kumpulan provider untuk dependency injection
var ProviderSet = wire.NewSet(auth2.NewAuthRepository, token.NewTokenRepository, users2.NewUsersRepository, auth3.NewAuthService, users3.NewUsersService, auth.NewAuthHandler, users.NewUsersHandler, ProvideValidator)

// ProvideValidator menyediakan instance validator
func ProvideValidator() *validator.Validate {
	return validator.New()
}
